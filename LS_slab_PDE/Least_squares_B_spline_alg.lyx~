#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Least-squares B-spline algorithm
\end_layout

\begin_layout Section
Algorithm overview
\end_layout

\begin_layout Standard
This algorithm uses
\end_layout

\begin_layout Itemize
Finite difference to calculate transfer functions from 
\begin_inset Formula $P\left(\omega\right)$
\end_inset

, 
\begin_inset Formula $\Theta\left(x_{1},\omega\right)$
\end_inset

 and 
\begin_inset Formula $\Theta\left(x_{s},\omega\right)$
\end_inset


\end_layout

\begin_layout Itemize
Approximates the profiles of 
\begin_inset Formula $\chi$
\end_inset

, 
\begin_inset Formula $V$
\end_inset

, 
\begin_inset Formula $\tau_{inv}$
\end_inset

 and 
\begin_inset Formula $P\left(x\right)$
\end_inset

 by continuous B-splines calculated on the finite difference grid
\end_layout

\begin_layout Itemize
The profile 
\begin_inset Formula $\chi$
\end_inset

 is reconstructed by 
\begin_inset Formula $\chi\left(x\right)=BP\left(x\right)\gamma\left(x_{c}\right)$
\end_inset

 
\end_layout

\begin_layout Itemize
The control points
\begin_inset Formula $\gamma$
\end_inset

 have to have a lower degree then 
\begin_inset Formula $M-2$
\end_inset

 (
\begin_inset Formula $M$
\end_inset

 number of sensors) and need to spaced uniformly
\end_layout

\begin_layout Itemize
To avoid oscillations at the edges of the domain the control point domain
 is extended outside the domain of interest (edges needs to be discussed
 and possibly improved)
\end_layout

\begin_layout Itemize
inverse matrix (A
\backslash
b) only needs to be calculated two times per iteration (one time for 
\begin_inset Formula $G$
\end_inset

 and one time for 
\begin_inset Formula $J$
\end_inset

)
\end_layout

\begin_layout Itemize
...
\end_layout

\begin_layout Standard
frequency domain: 1) partial differential equation reduces to a complex
 values ordinary differential equation
\end_layout

\begin_layout Standard
2) every frequency can be treated independently
\end_layout

\begin_layout Standard
3) periodic measurements means only a limited number of harmonics need to
 be considered (sparse) 
\end_layout

\begin_layout Itemize
Finite difference: 1) state-space structure 2) in frequency domain reduces
 in solving system of matrix equalities 3) arbitrary precision can be reached
 at the expense of computational cost
\end_layout

\begin_layout Itemize
Approximates the profiles of 
\begin_inset Formula $\chi$
\end_inset

, 
\begin_inset Formula $V$
\end_inset

, 
\begin_inset Formula $\tau_{inv}$
\end_inset

 and 
\begin_inset Formula $P\left(x\right)$
\end_inset

 by continuous B-splines calculated on the finite difference grid
\end_layout

\begin_layout Itemize
inverse matrix (A
\backslash
b) only needs to be calculated two times per iteration (one time for 
\begin_inset Formula $G$
\end_inset

 and one time for 
\begin_inset Formula $J$
\end_inset

)
\end_layout

\begin_layout Section
Cost function
\end_layout

\begin_layout Standard
Time domain
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V(q)=\sum_{i=1}^{r}\int_{0}^{1}\left|\hat{y}_{i}-Y\left(t_{i},x,q\left(t_{i},x\right)\right)u_{i}\left(t_{i},x;q\right)\right|^{2}dx
\]

\end_inset

Frequency domain
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V(q)=\int_{0}^{1}\frac{1}{F}\sum_{k=1}^{F}\left|\hat{y}_{k}\left(x_{j}\right)-G\left(\omega_{i},x,q\left(x\right)\right)u\left(\omega_{k},x;q\right)\right|^{2}dx
\]

\end_inset

Are real values with dimensions [sensors,1]
\end_layout

\begin_layout Standard
Evaluate for every 
\begin_inset Formula $j$
\end_inset

 
\begin_inset Formula $\frac{1}{F}\left|\hat{y}_{k}-G\left(\omega_{i},x,q\left(x\right)\right)u\left(\omega_{k},x;q\right)\right|^{2}$
\end_inset


\begin_inset Formula 
\[
V=\int_{0}^{x_{end}}V_{j}\left(x_{j}\right)dx
\]

\end_inset

If uniformly distributed
\begin_inset Formula 
\[
V=\sum V_{j}
\]

\end_inset


\end_layout

\begin_layout Standard
This can be rewritten as
\begin_inset Formula 
\[
e=\hat{y}_{k}\left(x_{j}\right)-G\left(\omega_{i},x,q\left(x\right)\right)u\left(\omega_{k},x;q\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
V(q)=\int_{0}^{1}\frac{1}{F}\sum_{k=1}^{F}e\left(x\right)\overline{e}\left(x\right)dx
\]

\end_inset


\begin_inset Formula 
\[
V(q)=\frac{1}{F}\sum_{k=1}^{F}\sum_{j=1}^{J}e^{2}\left(x_{j},\omega_{k}\right)dx
\]

\end_inset


\begin_inset Formula 
\[
V(q)=\frac{1}{F}\sum_{k=1}^{F}\left(e^{2}\left(x_{1},\omega_{k}\right)+e^{2}\left(x_{2},\omega_{k}\right)+\cdots+e^{2}\left(x_{j},\omega_{k}\right)\right)
\]

\end_inset


\begin_inset Formula 
\[
=\left[\begin{array}{ccc}
e_{\omega_{1}x_{1}}^{2} & e_{\omega_{2}x_{1}}^{2} & e_{\omega_{3}x_{1}}^{2}\\
e_{\omega_{1}x_{2}}^{2} & e_{\omega_{2}x_{2}}^{2} & e_{\omega_{3}x_{2}}^{2}\\
e_{\omega_{1}x_{3}}^{2} & e_{\omega_{2}x_{3}}^{2} & e_{\omega_{3}x_{3}}^{2}
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Section
Intialization of algorithm
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{array}{ccc}
\dot{T}\left(x_{2}\right) & = & \left(T\left(x_{1}\right)-2T\left(x_{2}\right)+T\left(x_{3}\right)\right)\left(\Delta x\right)^{-2}\\
\dot{T}\left(x_{3}\right) & = & \left(T\left(x_{2}\right)-2T\left(x_{3}\right)+T\left(x_{4}\right)\right)\left(\Delta x\right)^{-2}\\
\dot{T}\left(x_{N-2}\right) & = & \left(T\left(x_{N-3}\right)-2T\left(x_{N-2}\right)+T\left(x_{N-1}\right)\right)\left(\Delta x\right)^{-2}\\
\dot{T}\left(x_{N-1}\right) & = & \left(T\left(x_{N-2}\right)-2T\left(x_{N-1}\right)+T\left(x_{N}\right)\right)\left(\Delta x\right)^{-2}
\end{array}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left[\begin{array}{c}
\dot{T}\left(x_{2}\right)\\
\dot{T}\left(x_{3}\right)\\
\vdots\\
\dot{T}\left(x_{N-2}\right)\\
\dot{T}\left(x_{N-1}\right)
\end{array}\right]=\frac{\chi\left(x\right)}{\left(\Delta x\right)^{2}}\left[\begin{array}{ccccc}
-2 & 1\\
1 & -2 & 1\\
 &  & \ddots\\
 &  & 1 & -2 & 1\\
 &  &  & 1 & -2
\end{array}\right]+\frac{\chi\left(x\right)}{\left(\Delta x\right)^{2}}\left[\begin{array}{c}
1\\
0\\
\vdots\\
0\\
0
\end{array}\right]T\left(x_{1}\right)+\frac{\chi\left(x\right)}{\left(\Delta x\right)^{2}}\left[\begin{array}{c}
0\\
0\\
\vdots\\
0\\
1
\end{array}\right]T\left(x_{N}\right)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\]

\end_inset


\end_layout

\begin_layout Section
B-spline
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\gamma_{i}=BP^{-1}\chi\left(x_{i}\right)
\]

\end_inset


\begin_inset Formula 
\[
\chi\left(x\right)=BP\gamma_{i}
\]

\end_inset


\begin_inset Formula 
\[
A=\frac{diag\left(BP\gamma_{i}\right)}{\left(\Delta x\right)^{2}}\left[\begin{array}{ccccc}
-2 & 1\\
1 & -2 & 1\\
 &  & \ddots\\
 &  & 1 & -2 & 1\\
 &  &  & 1 & -2
\end{array}\right]
\]

\end_inset


\begin_inset Formula 
\[
B=\left[\begin{array}{ccc}
p_{1} & 1 & 0\\
p_{2} & 0 & 0\\
\vdots & \vdots & \vdots\\
p_{N-1} & 0 & 0\\
p_{N} & 0 & 1
\end{array}\right]\left[\begin{array}{ccc}
P\left(\omega\right) & \frac{diag\left(BP\gamma_{i}\right)}{\left(\Delta x\right)^{2}} & \frac{diag\left(BP\gamma_{i}\right)}{\left(\Delta x\right)^{2}}\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Section
Jacobian
\end_layout

\begin_layout Standard
Calculate Jacobian of 
\begin_inset Formula $G=C\left(sI-A\right)^{-1}B$
\end_inset

 using product rule and chain rule for inverse matrices 
\begin_inset Formula $\partial A^{-1}/\partial\theta=-A^{-1}\left(\partial A/\partial\theta\right)A^{-1}$
\end_inset

, which is rewritten as 
\begin_inset Formula 
\[
\frac{\partial\left(sI-A\right)^{-1}}{\partial\theta}=-\left(sI-A\right)^{-1}\left(-\frac{\partial A}{\partial\theta}\right)\,\left(sI-A\right)^{-1}
\]

\end_inset

such that the derivative of 
\begin_inset Formula 
\[
\frac{\partial G}{\partial\theta_{i}}=C\left(\left(sI-A\right)^{-1}\left(-\frac{\partial A}{\partial\theta_{i}}\right)\,\left(sI-A\right)^{-1}\right)B+C\left(sI-A\right)^{-1}\frac{\partial B}{\partial\theta_{i}}
\]

\end_inset


\end_layout

\begin_layout Subsection
Jacobian to 
\begin_inset Formula $\chi$
\end_inset

, 
\begin_inset Formula $V$
\end_inset

, 
\begin_inset Formula $\tau_{inv}$
\end_inset


\end_layout

\begin_layout Standard
First part is easy as 
\begin_inset Formula $A=diag\left(\beta_{\gamma}\gamma_{i}\right)L_{D}+diag\left(\beta_{\psi}\psi_{j}\right)L_{V}+diag\left(\beta_{\phi}\phi_{j}\right)L_{K}$
\end_inset

 
\begin_inset Formula 
\begin{eqnarray*}
\frac{\partial A}{\partial\gamma_{i}} & = & diag\left(\beta_{\gamma}\left(:,i\right)\right)L_{D}\\
\frac{\partial A}{\partial\psi_{i}} & = & diag\left(\beta_{\psi}\left(:,i\right)\right)L_{V}\\
\frac{\partial A}{\partial\phi_{i}} & = & diag\left(\beta_{\phi}\left(:,i\right)\right)L_{K}
\end{eqnarray*}

\end_inset

For the derivative of 
\begin_inset Formula $B$
\end_inset

 the diffusion coefficient is reexpressed in terms of 
\begin_inset Formula $\gamma_{i}$
\end_inset

 ,
\begin_inset Formula $\psi_{j}$
\end_inset

 
\begin_inset Formula $\phi_{k}$
\end_inset

,
\begin_inset space ~
\end_inset


\begin_inset Formula $p_{l}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
B=\left[\begin{array}{ccc}
p_{1} & \frac{\beta_{\gamma}\left(2,:\right)\gamma_{i}}{\Delta x^{2}}+\frac{\beta_{\psi}\left(2,:\right)\psi_{j}}{2\Delta x} & 0\\
p_{2} & 0 & 0\\
\vdots & \vdots & \vdots\\
p_{N-1} & 0 & 0\\
p_{N} & 0 & \frac{\beta_{\gamma}\left(end-1,:\right)\gamma_{i}}{\Delta x^{2}}-\frac{\beta_{\psi}\left(end-1,:\right)\psi_{j}}{2\Delta x}
\end{array}\right]
\]

\end_inset

such that for 
\begin_inset Formula $\gamma_{i}$
\end_inset


\begin_inset Formula 
\[
\frac{\partial B}{\partial\gamma_{i}}=\left[\begin{array}{ccc}
0 & \frac{\beta_{\gamma}\left(2,i\right)}{\Delta x^{2}} & 0\\
0 & 0 & 0\\
\vdots & \vdots & \vdots\\
0 & 0 & 0\\
0 & 0 & \frac{\beta_{\gamma}\left(end-1,i\right)}{\Delta x^{2}}
\end{array}\right].
\]

\end_inset

In the case of the convective velocity re-expessing 
\begin_inset Formula $B$
\end_inset


\begin_inset Formula 
\[
\frac{\partial B}{\partial\psi_{j}}=\left[\begin{array}{ccc}
0 & \frac{\beta_{\psi}\left(2,j\right)}{2\Delta x} & 0\\
0 & 0 & 0\\
\vdots & \vdots & \vdots\\
0 & 0 & 0\\
0 & 0 & -\frac{\beta_{\psi}\left(end-1,j\right)}{2\Delta x}
\end{array}\right].
\]

\end_inset

The derivative to 
\begin_inset Formula $\partial B/\partial\phi_{k}=0$
\end_inset

.
\end_layout

\begin_layout Subsection
Jacobian to 
\begin_inset Formula $P$
\end_inset


\end_layout

\begin_layout Standard
The derivative of 
\begin_inset Formula $\partial G/\partial p_{l}$
\end_inset

 where 
\begin_inset Formula $P\left(x\right)=BP\,p_{l}$
\end_inset


\begin_inset Formula 
\[
P\left(x\right)=\sum_{l=1}^{L}\beta_{p}\left(x\right)p_{l}=\beta_{1}p_{1}+\beta_{2}p_{2}+\beta_{3}p_{3}
\]

\end_inset


\begin_inset Formula 
\[
\frac{\partial P\left(x\right)}{\partial p_{l}}=\beta_{l}
\]

\end_inset

 
\begin_inset Formula 
\[
\frac{\partial G}{\partial p_{l}}=C\left(sI-A\right)^{-1}\frac{\partial B}{\partial p_{l}}
\]

\end_inset

such that
\begin_inset Formula 
\[
\frac{\partial G}{\partial p_{l}}=C\left(sI-A\right)^{-1}\beta_{p}\left(:,l\right)
\]

\end_inset


\end_layout

\begin_layout Section
Iterate over 
\begin_inset Formula $\gamma$
\end_inset


\end_layout

\begin_layout Section
Increase 
\begin_inset Formula $\gamma$
\end_inset

 up till 
\begin_inset Formula $M-2$
\end_inset


\end_layout

\begin_layout Section
Some tricks
\end_layout

\begin_layout Standard
function out=fun(matrix,vector)
\end_layout

\begin_layout Standard
out=matrix; for k=1:3 out(:,:,k)=out(:,:,k)*vector(k); 
\end_layout

\begin_layout Standard
end
\end_layout

\begin_layout Standard
newMatrix = bsxfun(@times,matrix,reshape(vector,[1 1 3]));
\end_layout

\end_body
\end_document
